

 ******************************************************************
   XHisho と 「あれ以外の何かwith任意」 について
 ******************************************************************


1. 「あれ以外の何かwith任意」とは？

詳細略(笑)
「Xでもまゆらに会いたい〜」という人向けです。




2. 動作原理

「なにか」のスクリプトを受け取り、適当に解釈してふきだしに表示します。
このスクリプトの受け取り方には2通りあります。

 その1:
	適当なタイミングでスクリプトを標準出力に吐く外部アプリケーショ
	ンを使う。
 その2:
	Merister氏が作られている「華和梨」を組み込む。この場合、
	configureのオプションに「--with-kawari」を指定することで、「華
	和梨」を組み込んで動作します。但し、コンパイルにはgcc-2.9x以降
	が必要だと思います。
	あとは、適当な辞書を用意すればおしゃべりを表示します。




3. コンパイル

configureのオプションで、

%./configure --with-option

とすると、「あれ以外の何かwith任意」対応になります。
外部コマンドに頼らずに「華和梨」を使う場合は

%./configure --with-option --with-kawari

としてください。





4. 外部コマンドには何を使えばいいの?

外部コマンドには、Merister氏が作られている「華和梨」と「非A for
Linux/Wine」(*1)にちょびっと手を加えた(*2)ものが使えます。
というか、この「非A」を元に作りましたんで ^^;

「Wineが動かないよ〜」という人のために、gcc-2.9x以降であればnativeにコ
ンパイルできるように修正を施したものもあります。

他にも色々ありそうな気配がしますが、あまり調べてません ^^;

SSTPのSEND(のスクリプト)だけ受け付ける、いい加減なものをapps/sstpとし
て入れてます。デフォルトでポート9801を見張るので、11000を見張りたいと
きは

xhisho -optioncmd "sstp 11000"

とでもしてください。




(*1)
http://meister-d-i.hoops.ne.jp/

(*2)
メッセージ表示でDecode()という関数を呼ばないようにするだけ





5. 使い方

起動時に、-optioncmd オプションで外部コマンドを指定します。例えば

%xhisho -optioncmd /usr/local/bin/nisesakura

などとします(コマンドにオプションを渡すなら、クォートで囲む。例えば
'/usr/local/bin/nisesakura 60')。ふきだしの大きさは -optionwidth と
-optionheightで指定可能です。

で、はっきり言ってしまうとまゆらでしか試してません。まゆらを使うときは
アニメーションファイルにまゆらのSurfaceを並べて記述し、

%xhisho -optioncmd /usr/local/bin/nisesakura -cgfile mayura.anim \
        -shape -noclock -unyuu

とかやるとそれっぽくなります。うにゅうを使うときは、うにゅうのCGは12行
目以降に書いてください(11行目まではさくらのsurfaceかダミーのファイル名
を記述。ただし、ダミーのファイルもCGファイルの必要あり)。サンプルとし
て、sample/mayura.anim を置いてますのでこれをsurfaceのCGのあるディレク
トリに置いてください。


ふきだしの位置が気にくわないときは-xoff オプションと -yoff オプション
で適当に調整してください。わたしが試した感じだと

%xhisho -optioncmd /usr/local/bin/nisesakura -cgfile mayura.anim \
        -shape -noclock -xoff '-70' -yoff 10 -unyuu

くらいがいい感じです。
ふきだしは、右/中/左クリックいずれでも閉じます。ふきだしの上の適当なと
ころでクリックしてください。


以下に、with任意のカスタムに役立つオプションを列挙します。これらを適当
に組み合わせてください。対応するリソースも列挙しますので、毎回起動オプ
ションに指定するのが面倒な場合はリソースファイルで設定してください。



・-unyuu            : うにゅうを表示する
  (リソース: XHisho*UseUnyuu (bool値))
・-xoff             : ふきだしの位置補正(x方向)
  (リソース: XHisho*option*xoff (整数値))

・-yoff             : ふきだしの位置補正(y方向)
  (リソース: XHisho*option*yoff (整数値))

・-optionwidth      : "任意"のふきだしの幅
  (リソース: XHisho*OptionWindow*optionWidth (整数値))

・-optionheight     : "任意"のふきだしの高さ
  (リソース: XHisho*OptionWindow*optionHeight (整数値))

・-uxoff            : うにゅうのふきだしの位置補正(x方向)
  (リソース: XHisho*uXOffset (整数値))

・-uyoff            : うにゅうのふきだしの位置補正(y方向)
  (リソース: XHisho*uYOffset (整数値))

・-uwidth           : うにゅうのふきだしの幅
  (リソース: XHisho*UOptionWindow*optionWidth (整数値))

・-uheight          : うにゅうのふきだしの高さ
  (リソース: XHisho*UOptionWindow*optionHeight (整数値))

・-ucgoff           : うにゅうのCGの位置補正(x方向)
  (リソース: XHisho*uCGoff (整数値))

・-optiontimeout    : "任意"のふきだしの自動Popdownまでの時間
  (リソース: XHisho*optionTimeout (整数値))

・-wait             : "任意"のメッセージのウエイト
  (リソース: XHisho*messageWait (整数値))

・-nogreeting       : 起動時に挨拶を出さない
  (対応するリソースなし)
・kwait             : 「華和梨」のメッセージ頻度(秒単位)。0で「華和梨」の
                      AIメッセージを表示しません。
  (リソース: XHisho*kawariWait (整数値)) 

・kawaridir         : 「華和梨」の辞書のあるディレクトリ
  (リソース: XHisho*kawariDir (文字列)) 





6. 制限事項

・結構メモリを食います。
・外部コマンドが不意に死ぬとひどいことになります。XHishoを再起動してく
  ださい。
・選択肢を選ぶことはできませんので、SSTP対応の外部コマンドを使うには適
  当に工夫してください。
・まゆらのおしゃべりにはSJISの機種依存文字が含まれてます。これらは、
  「＃」に置き換えられます。たまに失敗して表示が崩れるかも知れません。
・「華和梨」と外部コマンドを同時に使用すると、タイミングによってはごく
  稀に変なことになるかも知れません。
・たまに表示が変でも笑って許してください。





7. Copyright

ディレクトリ kawari 以下のファイルの、以下のものについてはMeister氏
(meister@24h.co.jp)が原作者です。

	base64.cpp
	base64.h
	kawari.cpp
	kawari.h
	kawari_crypt.cpp
	kawari_crypt.h

これらはMeister氏のライセンスに従い、XHishoと共に再配布する場合は「原
作者表示を残したままで」BSDライセンスとします。その他のものについては、
XHishoのライセンスに従います。





8. 謝辞

「華和梨」の作者のMeisterさん。そもそも「華和梨」が無ければこの機能は
実現できませんでした。また、再配布を快く承諾して頂きありがとうございま
した。





9. 将来

こうなると「skinがそのまま使えて欲しい」とか「選択肢が選べるように」と
いった要望もあるわけですが、はっきり言ってそこまでやる気ないです(笑) 
そもそも「『あれ』のX版」の開発が第一目標ではないので。この機能はあく
までオマケです。

ただ、しつこくメールを送り続けるとそのうち根負してやるかもしれませんの
で、是非欲しいという人はメールを下さい :-)
